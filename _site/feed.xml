<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-06-12T20:49:59+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Hong Seok Pyo</title><subtitle>keep it simple.
</subtitle><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><entry><title type="html">[오늘의 메모] 에드워드호퍼의 습작</title><link href="http://localhost:4000/jekyll/update/2023/06/12/Edwardhopper.html" rel="alternate" type="text/html" title="[오늘의 메모] 에드워드호퍼의 습작" /><published>2023-06-12T20:48:46+09:00</published><updated>2023-06-12T20:48:46+09:00</updated><id>http://localhost:4000/jekyll/update/2023/06/12/Edwardhopper</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/06/12/Edwardhopper.html"><![CDATA[<p>지난 주말 서울시립미술관에서 진행 중인 에드워드호퍼전을 보고 왔다. 
예전에 파리에서회고전을 할 때 작품을 실제로 봤었는데 그 때 보지 못했던 습작들과 스케치들을 많이 볼 수 있어서 너무 좋았다.
특히 그림을 완성하기 까지 디테일한 연구들을 볼 수 있었는데, 최종 완성작 보다 신선한 느낌이 들기도 했다.
대가들은 당연히 그런 스터디 없이 너무나 쉽게 그렸을 거라는 이상한 편견을 가지고 있었던 것 같다. (당연하게도 실력 뒤에는 그만큼의 노력이 필요하다.) 좋아하는 작가의 그림을 볼 수 있어서 좋았다. 여러가지 생각을 하게 하는 전시였다.</p>

<ul>
  <li>눈에 보이지 않는 것을 볼 수 있는 것.</li>
  <li>스스로 성취감을 느끼고 동기부여 하는 것</li>
  <li>기본기와 반복, 그리고 연구</li>
</ul>

<p><img src="http://" alt="img" /></p>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[지난 주말 서울시립미술관에서 진행 중인 에드워드호퍼전을 보고 왔다. 예전에 파리에서회고전을 할 때 작품을 실제로 봤었는데 그 때 보지 못했던 습작들과 스케치들을 많이 볼 수 있어서 너무 좋았다. 특히 그림을 완성하기 까지 디테일한 연구들을 볼 수 있었는데, 최종 완성작 보다 신선한 느낌이 들기도 했다. 대가들은 당연히 그런 스터디 없이 너무나 쉽게 그렸을 거라는 이상한 편견을 가지고 있었던 것 같다. (당연하게도 실력 뒤에는 그만큼의 노력이 필요하다.) 좋아하는 작가의 그림을 볼 수 있어서 좋았다. 여러가지 생각을 하게 하는 전시였다.]]></summary></entry><entry><title type="html">[프로그래머스] 옹알이(2)</title><link href="http://localhost:4000/jekyll/update/2023/06/12/2.html" rel="alternate" type="text/html" title="[프로그래머스] 옹알이(2)" /><published>2023-06-12T16:16:35+09:00</published><updated>2023-06-12T16:16:35+09:00</updated><id>http://localhost:4000/jekyll/update/2023/06/12/2</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/06/12/2.html"><![CDATA[<p>프로그래머스 - 코딩테스트 연습 - 옹알이(2)
<br /></p>

<p><strong>문제</strong><br />
머쓱이는 태어난 지 11개월 된 조카를 돌보고 있습니다. 조카는 아직 “aya”, “ye”, “woo”, “ma” 네 가지 발음과 네 가지 발음을 조합해서 만들 수 있는 발음밖에 하지 못하고 연속해서 같은 발음을 하는 것을 어려워합니다. 문자열 배열 babbling이 매개변수로 주어질 때, 머쓱이의 조카가 발음할 수 있는 단어의 개수를 return하도록 solution 함수를 완성해주세요.</p>

<p><br />
<strong>제한사항</strong>
1 ≤ babbling의 길이 ≤ 100
1 ≤ babbling[i]의 길이 ≤ 30
문자열은 알파벳 소문자로만 이루어져 있습니다.
<br /><br /></p>

<p><strong>입출력 예</strong></p>

<table>
  <thead>
    <tr>
      <th>babbling</th>
      <th>results</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[“aya”, “yee”, “u”, “maa”]</td>
      <td>1</td>
    </tr>
    <tr>
      <td>[“ayaye”, “uuu”, “yeye”, “yemawoo”, “ayaayaa”]</td>
      <td>2</td>
    </tr>
  </tbody>
</table>

<p><br />
<strong>풀이</strong>
<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def solution(babbling):
    answer = 0
    speak = ['aya', 'ye', 'woo', 'ma']
    
    for i in range(len(babbling)):
        for s in speak:
            if s in babbling[i] and s*2 not in babbling[i]:
                babbling[i] = babbling[i].replace(s, '0')
            
    answer = [w for w in babbling if all(c == '0' for c in w)]
            
    return len(answer)
</code></pre></div></div>

<ul>
  <li>옹알이(1)과 같은 거의 유사한 풀이방식</li>
  <li>작은 실수 유의!</li>
</ul>

<p><br />
<strong>다른 사람 풀이</strong>
<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def solution(babbling):
    answer = 0
    speak = ["aya", "ye", "woo", "ma"]
    for i in babbling:
        for v in speak:
            if v*2 not in i:
                i = i.replace(v,' ')
        if i.strip() == '':
            answer += 1
    return answer
</code></pre></div></div>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[프로그래머스 - 코딩테스트 연습 - 옹알이(2)]]></summary></entry><entry><title type="html">[프로그래머스] 크레인 인형뽑기</title><link href="http://localhost:4000/jekyll/update/2023/06/12/crain.html" rel="alternate" type="text/html" title="[프로그래머스] 크레인 인형뽑기" /><published>2023-06-12T11:09:22+09:00</published><updated>2023-06-12T11:09:22+09:00</updated><id>http://localhost:4000/jekyll/update/2023/06/12/crain</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/06/12/crain.html"><![CDATA[<p>프로그래머스 - 코딩테스트 연습 - 겹치는 선분의 길이
<br /></p>

<p><strong>문제</strong><br />
게임 화면의 격자의 상태가 담긴 2차원 배열 board와 인형을 집기 위해 크레인을 작동시킨 위치가 담긴 배열 moves가 매개변수로 주어질 때, 크레인을 모두 작동시킨 후 터트려져 사라진 인형의 개수를 return 하도록 solution 함수를 완성해주세요.</p>

<p><br />
<strong>제한사항</strong></p>
<ul>
  <li>lines의 길이 = 3</li>
  <li>lines의 원소의 길이 = 2</li>
  <li>모든 선분은 길이가 1 이상입니다.</li>
  <li>lines의 원소는 [a, b] 형태이며, a, b는 각각 선분의 양 끝점 입니다.
-100 ≤ a &lt; b ≤ 100
<br /><br /></li>
</ul>

<p><strong>입출력 예</strong></p>

<table>
  <thead>
    <tr>
      <th>lines</th>
      <th>moves</th>
      <th>results</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[0,0,0,0,0],[0,0,1,0,3],[0,2,5,0,1],[4,2,4,4,2],[3,5,1,3,1]]</td>
      <td>[1,5,3,5,1,2,1,4]</td>
      <td>4</td>
    </tr>
  </tbody>
</table>

<p><br />
<strong>풀이</strong>
<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def solution(board, moves):
    answer = 0
    basket = []
    z_li = zip(*board)
    modi_z = [list(z) for z in z_li]
    
    for m in moves:
        for i, value in enumerate(modi_z[m-1]):
            if value != 0:
                basket.append(value)
                modi_z[m-1][i] = 0
                break

    count = 0
    while True:
        found = False
        for i in range(len(basket) - 1):
            if basket[i] == basket[i+1]:
                basket.pop(i)
                basket.pop(i)
                count += 2
                found = True
                break
        if not found:
            break
    answer = count
    return answer
</code></pre></div></div>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[프로그래머스 - 코딩테스트 연습 - 겹치는 선분의 길이]]></summary></entry><entry><title type="html">[프로그래머스] 겹치는 선분의 길이</title><link href="http://localhost:4000/jekyll/update/2023/05/27/pratice-2.html" rel="alternate" type="text/html" title="[프로그래머스] 겹치는 선분의 길이" /><published>2023-05-27T20:29:14+09:00</published><updated>2023-05-27T20:29:14+09:00</updated><id>http://localhost:4000/jekyll/update/2023/05/27/pratice-2</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/27/pratice-2.html"><![CDATA[<p>프로그래머스 - 코딩테스트 연습 - 겹치는 선분의 길이
<br /></p>

<p><strong>문제</strong><br />
선분 3개가 평행하게 놓여 있습니다. 세 선분의 시작과 끝 좌표가 [[start, end], [start, end], [start, end]] 형태로 들어있는 2차원 배열 lines가 매개변수로 주어질 때, 두 개 이상의 선분이 겹치는 부분의 길이를 return 하도록 solution 함수를 완성해보세요.</p>

<p>lines가 [[0, 2], [-3, -1], [-2, 1]]일 때 그림으로 나타내면 다음과 같습니다.</p>

<p><br /></p>

<p><img src="https://github.com/sp-std/sp-std.github.io/blob/main/images/line.png?raw=true" alt="img" />
<!-- <img src="/images/line.png"> --></p>

<p><br />
<strong>제한사항</strong></p>
<ul>
  <li>lines의 길이 = 3</li>
  <li>lines의 원소의 길이 = 2</li>
  <li>모든 선분은 길이가 1 이상입니다.</li>
  <li>lines의 원소는 [a, b] 형태이며, a, b는 각각 선분의 양 끝점 입니다.
-100 ≤ a &lt; b ≤ 100
<br /><br /></li>
</ul>

<p><strong>입출력 예</strong></p>

<table>
  <thead>
    <tr>
      <th>lines</th>
      <th>results</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[0, 1], [2, 5], [3, 9]]</td>
      <td>2</td>
    </tr>
    <tr>
      <td>[[-1, 1], [1, 3], [3, 9]]</td>
      <td>0</td>
    </tr>
    <tr>
      <td>[[0, 5], [3, 9], [1, 10]]</td>
      <td>8</td>
    </tr>
  </tbody>
</table>

<p><br />
<strong>풀이</strong>
<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def solution(lines):
    answer = 0
    start1, end1 = lines[0][0], lines[0][1]
    start2, end2 = lines[1][0], lines[1][1]
    start3, end3 = lines[2][0], lines[2][1]
    m_sta = min(start1, start2, start3)
    m_end = max(end1, end2, end3)
    over_1 = []
    over_2 = []
    over_3 = []
    result = []
    
    for i in range(m_sta, m_end+1):
        if start1 &lt;= i &lt;= end1 and start2 &lt;= i &lt;= end2:
            over_1.append(i)
    
        if start2 &lt;= i &lt;= end2 and start3 &lt;= i &lt;= end3:
            over_2.append(i)
            
        if start1 &lt;= i &lt;= end1 and start3 &lt;= i &lt;= end3:
            over_3.append(i)
    
    merged = over_1 + over_2 + over_3
    result2 = list(set(merged))
    result2.sort()
            
    if len(over_1) + len(over_2) + len(over_3) == len(result2):
        if over_1 != []:
            answer += over_1[-1] - over_1[0]
        if over_2 != []:
            answer += over_2[-1] - over_2[0]
        if over_3 != [] :
            answer += over_3[-1] - over_3[0]
    else:
        answer = result2[-1] - result2[0]

    return answer
</code></pre></div></div>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[프로그래머스 - 코딩테스트 연습 - 겹치는 선분의 길이]]></summary></entry><entry><title type="html">[프로그래머스] 평행</title><link href="http://localhost:4000/jekyll/update/2023/05/27/practice.html" rel="alternate" type="text/html" title="[프로그래머스] 평행" /><published>2023-05-27T20:22:31+09:00</published><updated>2023-05-27T20:22:31+09:00</updated><id>http://localhost:4000/jekyll/update/2023/05/27/practice</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/27/practice.html"><![CDATA[<p>프로그래머스 - 코딩테스트 연습 - 평행
<br /></p>

<p><strong>문제</strong><br />
점 네 개의 좌표를 담은 이차원 배열  dots가 다음과 같이 매개변수로 주어집니다.
[[x1, y1], [x2, y2], [x3, y3], [x4, y4]]
주어진 네 개의 점을 두 개씩 이었을 때, 두 직선이 평행이 되는 경우가 있으면 1을 없으면 0을 return 하도록 solution 함수를 완성해보세요.</p>

<p><br />
<strong>제한사항</strong></p>
<ul>
  <li>dots의 길이 = 4</li>
  <li>dots의 원소는 [x, y] 형태이며 x, y는 정수입니다.</li>
  <li>0 ≤ x, y ≤ 100</li>
  <li>서로 다른 두개 이상의 점이 겹치는 경우는 없습니다.</li>
  <li>두 직선이 겹치는 경우(일치하는 경우)에도 1을 return 해주세요.</li>
  <li>임의의 두 점을 이은 직선이 x축 또는 y축과 평행한 경우는 주어지지 않습니다.
<br /><br /></li>
</ul>

<p><strong>입출력 예</strong></p>

<table>
  <thead>
    <tr>
      <th>dots</th>
      <th>results</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[1, 4], [9, 2], [3, 8], [11, 6]]</td>
      <td>1</td>
    </tr>
    <tr>
      <td>[[3, 5], [4, 1], [2, 4], [5, 10]]</td>
      <td>0</td>
    </tr>
  </tbody>
</table>

<p><br />
<strong>풀이</strong>
<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def solution(dots):
    answer = 0
    my_list = []
    
    for i in range(len(dots)):
        for j in range(i+1,len(dots)):
            x_diff = dots[j][0] - dots[i][0]
            y_diff = dots[j][1] - dots[i][1]
            my_list.append(y_diff/x_diff)
    lens = len(my_list)
    list_a = [[my_list[i] , my_list[lens-1-i]] for i in range(lens//2)]
    
    for i in range(len(list_a)):
        if list_a[i][0] == list_a[i][1]:
            answer = 1    

    return answer
</code></pre></div></div>

<ul>
  <li>반복문 사용</li>
  <li>평행하는 선분 == 기울기 같은 선분</li>
</ul>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[프로그래머스 - 코딩테스트 연습 - 평행]]></summary></entry><entry><title type="html">[프로그래머스] 옹알이(1)</title><link href="http://localhost:4000/jekyll/update/2023/05/26/practice.html" rel="alternate" type="text/html" title="[프로그래머스] 옹알이(1)" /><published>2023-05-26T20:02:02+09:00</published><updated>2023-05-26T20:02:02+09:00</updated><id>http://localhost:4000/jekyll/update/2023/05/26/practice</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/26/practice.html"><![CDATA[<p>프로그래머스 - 코딩테스트 연습 - 옹알이(1)
<br /></p>

<p><strong>문제</strong><br />
머쓱이는 태어난 지 6개월 된 조카를 돌보고 있습니다. 조카는 아직 “aya”, “ye”, “woo”, “ma” 네 가지 발음을 최대 한 번씩 사용해 조합한(이어 붙인) 발음밖에 하지 못합니다. 문자열 배열 babbling이 매개변수로 주어질 때, 머쓱이의 조카가 발음할 수 있는 단어의 개수를 return하도록 solution 함수를 완성해주세요.</p>

<p><br />
<strong>제한사항</strong></p>
<ul>
  <li>1 ≤ babbling의 길이 ≤ 100</li>
  <li>1 ≤ babbling[i]의 길이 ≤ 15</li>
  <li>babbling의 각 문자열에서 “aya”, “ye”, “woo”, “ma”는 각각 최대 한 번씩만 등장합니다.</li>
  <li>즉, 각 문자열의 가능한 모든 부분 문자열 중에서 “aya”, “ye”, “woo”, “ma”가 한 번씩만 등장합니다.
문자열은 알파벳 소문자로만 이루어져 있습니다.
<br /><br /></li>
</ul>

<p><strong>입출력 예</strong></p>

<table>
  <thead>
    <tr>
      <th>babbling</th>
      <th>results</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[“aya”, “yee”, “u”, “maa”, “wyeoo”]</td>
      <td>1</td>
    </tr>
    <tr>
      <td>[“ayaye”, “uuuma”, “ye”, “yemawoo”, “ayaa”]</td>
      <td>3</td>
    </tr>
  </tbody>
</table>

<p><br />
<strong>풀이</strong>
<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def solution(babbling):
    answer = 0
    words = ["aya", "ye", "woo", "ma"]
    my_list = []
    
    for i in babbling:
        for j in words:
            i = i.replace(j, ' ')   
        my_list.append(i)

    answer = [word for word in my_list if all(cha == ' ' for cha in word)] 
    
    return len(answer)
</code></pre></div></div>

<ul>
  <li>replace의 사용</li>
  <li>리스트 컴프리헨션, all 메서드</li>
</ul>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[프로그래머스 - 코딩테스트 연습 - 옹알이(1)]]></summary></entry><entry><title type="html">파이썬 문법 메모</title><link href="http://localhost:4000/jekyll/update/2023/05/19/programmers.html" rel="alternate" type="text/html" title="파이썬 문법 메모" /><published>2023-05-19T16:52:42+09:00</published><updated>2023-05-19T16:52:42+09:00</updated><id>http://localhost:4000/jekyll/update/2023/05/19/programmers</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/19/programmers.html"><![CDATA[<p>반복적으로 나오는 기본 메서드들은 확실히 기억해 놓자. (자료형으로 나눠서 메서드들을 기억하는 게 좋을 것 같다)</p>

<p><strong>문자형</strong>은 immutable 자료형 &gt; 슬라이싱으로 처리, 내용을 변경할 수 없다.<br />
<strong>리스트</strong>, <strong>딕셔너리</strong>, <strong>집합형</strong>은 mutable 자료형<br />
<strong>문자형</strong>, <strong>리스트</strong>, <strong>딕셔너리</strong>는 시퀀스 자료형<br />
<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>문자열.split(sep=구분자, maxsplit=분할횟수) &gt; 리스트로 반환
리스트.append()
리스트.insert
리스트.sort(opt(reverse=True)) &gt; 원본값 변경
sorted(리스트) &gt; 새로운 리스트 반환
' '.join(리스트) 
문자열.replace('A', 'B') / 연결해서 사용 가능
strip() &gt; 공백 제거, 문자 제거
del 리스트
리스트.remove()
리스트.pop()
문자열.find()
문자열.rfind()
리스트 나누기 &gt; 리스트[start:end:split]
arr = [[0] * n for _ in range(n)]
range(start, stop, step)
.count()
round(num, digit)
</code></pre></div></div>
<p><br />
한번 더 풀어볼 것.</p>

<ul>
  <li>배열의 원소만큼 추가하기</li>
  <li>문자열 바꿔서 찾기</li>
  <li>꼬리 문자열</li>
  <li>0 떼기 (break)</li>
  <li>l로 만들기<br />
replace는 새로운 문자열 반환, 슬라이싱으로 처리하자</li>
  <li>할 일 목록<br />
zip() 함수는 이터레이터를 반환, 인덱스 사용이 불필요. 언패킹 활용 가능</li>
  <li>주사위 게임2</li>
  <li>배열의 원소 삭제하기</li>
  <li>가까운 1 찾기</li>
  <li>특별한 이차원 배열1,2</li>
  <li>9로 나눈 나머지</li>
  <li>그림확대</li>
  <li>배열만들기 2</li>
  <li>배열만들기 4</li>
  <li>배열만들기 6</li>
  <li>수열과 구간 쿼리</li>
  <li>주사위 게임 3 (딕셔너리 자료형 활용)
<br /></li>
</ul>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[반복적으로 나오는 기본 메서드들은 확실히 기억해 놓자. (자료형으로 나눠서 메서드들을 기억하는 게 좋을 것 같다)]]></summary></entry><entry><title type="html">Python &amp;amp; javascript-01 (w/Chatgpt)</title><link href="http://localhost:4000/jekyll/update/2023/05/18/python-javascriptw.html" rel="alternate" type="text/html" title="Python &amp;amp; javascript-01 (w/Chatgpt)" /><published>2023-05-18T19:46:17+09:00</published><updated>2023-05-18T19:46:17+09:00</updated><id>http://localhost:4000/jekyll/update/2023/05/18/python-javascriptw</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/18/python-javascriptw.html"><![CDATA[<p><strong>문제1.</strong>      <br />
길이가 같은 문자열 배열 my_strings와 이차원 정수 배열 parts가 매개변수로 주어집니다. parts[i]는 [s, e] 형태로, my_string[i]의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다. 각 my_strings의 원소의 parts에 해당하는 부분 문자열을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>

<p><strong>제한사항</strong></p>
<ul>
  <li>1 ≤ my_strings의 길이 = parts의 길이 ≤ 100</li>
  <li>1 ≤ my_strings의 원소의 길이 ≤ 100</li>
  <li>parts[i]를 [s, e]라 할 때, 다음을 만족합니다.</li>
  <li>0 ≤ s ≤ e &lt; my_strings[i]의 길이</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>** javascript
function solution(my_strings, parts) {
let answer = '';
for (let i = 0; i &lt; my_strings.length; i++) {
	answer += my_strings[i].substring(parts[i][0], parts[i][1] + 1);
}
return answer;
}

** python
def solution(my_strings, parts):
	answer = ''
	for i in range(len(my_strings)):
			answer += my_strings[i][parts[i][0]:parts[i][1]+1]
	return answer**
</code></pre></div></div>
<p><br /><br /></p>

<p><strong>문제2.</strong>    <br />
길이가 같은 두 문자열 str1과 str2가 주어집니다.
두 문자열의 각 문자가 앞에서부터 서로 번갈아가면서 한 번씩 등장하는 문자열을 만들어 return 하는 solution 함수를 완성해 주세요.</p>

<p><strong>제한사항</strong></p>
<ul>
  <li>1 ≤ str1의 길이 = str2의 길이 ≤ 10</li>
  <li>str1과 str2는 알파벳 소문자로 이루어진 문자열입니다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>** python
def solution(str1, str2):
	answer = ''
	for i in range(len(str1)):
			answer += str1[i]+str2[i]
	return answer

** javascript
function solution(str1, str2) {
let answer = '';
for (let i = 0; i &lt; str1.length; i++) {
	answer += str1[i] + str2[i];
}
return answer;
}
</code></pre></div></div>

<p><br /><br /><br />
문제 출처 -<a href="https://programmers.co.kr/"> 프로그래머스</a></p>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[문제1. 길이가 같은 문자열 배열 my_strings와 이차원 정수 배열 parts가 매개변수로 주어집니다. parts[i]는 [s, e] 형태로, my_string[i]의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다. 각 my_strings의 원소의 parts에 해당하는 부분 문자열을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.]]></summary></entry><entry><title type="html">파이썬 기초</title><link href="http://localhost:4000/jekyll/update/2023/05/18/w-python.html" rel="alternate" type="text/html" title="파이썬 기초" /><published>2023-05-18T19:32:21+09:00</published><updated>2023-05-18T19:32:21+09:00</updated><id>http://localhost:4000/jekyll/update/2023/05/18/w-python</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/18/w-python.html"><![CDATA[<ul>
  <li>문자형 자료는 immutable 자료형이면서, 시퀸스 자료형 &gt; 슬라이싱으로 처리, 반복문 가능</li>
  <li>for문 범위 설정에서 마지막 숫자는 범위에 포함되지 않는다</li>
  <li>join() &gt; 리스트 문자열로 변환</li>
  <li>split &gt; 문자열 리스트로 변환(구분자 기준으로)</li>
  <li>부분 문자열(in/not in)</li>
  <li>list.sort()</li>
  <li>+= 연사자는 개별적인 원소를 만든다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>answer += strArr[i].upper()
answer = ['a', 'b', 'c', ... ]
instead
answer.append(strArr[i].upper())
</code></pre></div></div>
<ul>
  <li>if</li>
  <li>elif</li>
  <li>else</li>
  <li>replace는 원본 문자열을 바꾸는게 아니라 ‘새로운 문자열’을 반환한다. 그래서 다시 한번 더 결과를 할당해야 한다.</li>
  <li>replace는 체인 형태로 사용 가능(‘ABBAAB’ -&gt; ‘BAABBA’)</li>
  <li>리스트 원소 삭제 &gt; 인덱스 활용(del, pop) 문자열 활용(remove( ))</li>
  <li>문자 공백 제거
    <ul>
      <li>strip : 문자열 양쪽 공백 제거</li>
      <li>lstrip : 문자열의 왼쪽 처음 공백 제거</li>
      <li>rstrip : 문자열의 오른쪽 공백 제거</li>
      <li>이중,삼중 리스트 인덱싱</li>
    </ul>
  </li>
</ul>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[문자형 자료는 immutable 자료형이면서, 시퀸스 자료형 &gt; 슬라이싱으로 처리, 반복문 가능 for문 범위 설정에서 마지막 숫자는 범위에 포함되지 않는다 join() &gt; 리스트 문자열로 변환 split &gt; 문자열 리스트로 변환(구분자 기준으로) 부분 문자열(in/not in) list.sort() += 연사자는 개별적인 원소를 만든다.]]></summary></entry><entry><title type="html">정수를 나선형으로 배치하기 (마방진 모양 만들기)</title><link href="http://localhost:4000/jekyll/update/2023/05/16/w-python.html" rel="alternate" type="text/html" title="정수를 나선형으로 배치하기 (마방진 모양 만들기)" /><published>2023-05-16T21:19:11+09:00</published><updated>2023-05-16T21:19:11+09:00</updated><id>http://localhost:4000/jekyll/update/2023/05/16/w-python</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/16/w-python.html"><![CDATA[<p><strong>문제</strong>
양의 정수 <code class="language-plaintext highlighter-rouge">n</code>이 매개변수로 주어지고, <code class="language-plaintext highlighter-rouge">n</code> * <code class="language-plaintext highlighter-rouge">n</code> 배열에 1부터 n^2까지 정수를
인덱스 [0][0]부터 시계방향 나선형으로 배치한 이차원 배열을 return 하는 함수를 만들기</p>

<p><strong>제한사항</strong>   <br />
1 &lt;= n &lt;= 30</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def solution(n):
    arr = [[0] * n for _ in range(n)]

    # 배열에 넣을 숫자 초기화
    num = 1

    # 테두리를 순서대로 채워나가는 반복문
    for i in range(n // 2):
        for j in range(i, n-i-1):
            arr[i][j] = num
            num += 1
        for j in range(i, n-i-1):
            arr[j][n-i-1] = num
            num += 1
        for j in range(i, n-i-1):
            arr[n-i-1][n-j-1] = num
            num += 1
        for j in range(i, n-i-1):
            arr[n-j-1][i] = num
            num += 1
    if n % 2 != 0:
        arr[n//2][n//2] = n*n

    # 배열 반환
    return arr
</code></pre></div></div>]]></content><author><name>Hong Seok Pyo</name><email>seokpyo1110@gmail.com</email></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[문제 양의 정수 n이 매개변수로 주어지고, n * n 배열에 1부터 n^2까지 정수를 인덱스 [0][0]부터 시계방향 나선형으로 배치한 이차원 배열을 return 하는 함수를 만들기]]></summary></entry></feed>